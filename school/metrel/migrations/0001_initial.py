# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-11 07:48
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('activityid', models.AutoField(db_column='ActivityId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'db_table': 'Activities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Appinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.CharField(db_column='Property', max_length=255)),
                ('value', models.CharField(db_column='Value', max_length=255)),
            ],
            options={
                'db_table': 'AppInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApplianceProperties',
            fields=[
                ('appliancepropertyid', models.AutoField(db_column='AppliancePropertyId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=20)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Appliance Property',
                'verbose_name_plural': 'Appliance Properties',
                'db_table': 'ApplianceProperties',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Appliances',
            fields=[
                ('applianceid', models.AutoField(db_column='ApplianceId', primary_key=True, serialize=False)),
                ('appliancetag', models.CharField(db_column='ApplianceTag', max_length=25)),
                ('testdate', models.DateTimeField(blank=True, db_column='TestDate', null=True)),
                ('retestdate', models.DateTimeField(blank=True, db_column='RetestDate', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=20, null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('status', models.SmallIntegerField(blank=True, db_column='Status', null=True)),
                ('nextapplianceid', models.IntegerField(blank=True, db_column='NextApplianceId', null=True)),
                ('archived', models.SmallIntegerField(blank=True, db_column='Archived', null=True)),
                ('appliancename', models.CharField(blank=True, db_column='ApplianceName', max_length=50, null=True)),
                ('appliance2tag', models.CharField(blank=True, db_column='Appliance2Tag', max_length=25, null=True)),
                ('appliance2name', models.CharField(blank=True, db_column='Appliance2Name', max_length=50, null=True)),
                ('site', models.CharField(blank=True, db_column='Site', max_length=50, null=True)),
                ('patid2', models.IntegerField(blank=True, db_column='PATId2', null=True)),
                ('attachments', models.TextField(blank=True, db_column='Attachments', null=True)),
            ],
            options={
                'verbose_name': 'Appliance',
                'verbose_name_plural': 'Appliances',
                'db_table': 'Appliances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoTestGroups',
            fields=[
                ('autotestgroupid', models.AutoField(db_column='AutoTestGroupId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=20)),
                ('instrumentname', models.CharField(db_column='InstrumentName', max_length=10)),
                ('grouptype', models.SmallIntegerField(db_column='GroupType')),
            ],
            options={
                'db_table': 'AutoTestGroups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoTests',
            fields=[
                ('autotestid', models.AutoField(db_column='AutoTestId', primary_key=True, serialize=False)),
                ('testcode', models.CharField(db_column='TestCode', max_length=255)),
                ('instrumentname', models.CharField(db_column='InstrumentName', max_length=20)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Auto Test',
                'verbose_name_plural': 'Auto Tests',
                'db_table': 'AutoTests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessSubjects',
            fields=[
                ('subjectid', models.AutoField(db_column='SubjectId', primary_key=True, serialize=False)),
                ('nametype', models.IntegerField(db_column='NameType')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
            ],
            options={
                'verbose_name': 'Business Subject',
                'verbose_name_plural': 'Business Subjects',
                'db_table': 'BusinessSubjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Checkbox',
            fields=[
                ('checkboxid', models.AutoField(db_column='CheckBoxId', primary_key=True, serialize=False)),
                ('functionname', models.CharField(db_column='FunctionName', max_length=30)),
                ('ref', models.CharField(db_column='Ref', max_length=20)),
                ('upperlimit', models.CharField(blank=True, db_column='UpperLimit', max_length=18, null=True)),
                ('lowerlimit', models.CharField(blank=True, db_column='LowerLimit', max_length=18, null=True)),
                ('result', models.CharField(blank=True, db_column='Result', max_length=18, null=True)),
                ('status', models.SmallIntegerField(blank=True, db_column='Status', null=True)),
                ('functionindex', models.IntegerField(blank=True, db_column='FunctionIndex', null=True)),
                ('functiongroup', models.CharField(blank=True, db_column='FunctionGroup', max_length=30, null=True)),
            ],
            options={
                'db_table': 'CheckBox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customerid', models.AutoField(db_column='CustomerId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('department', models.CharField(blank=True, db_column='Department', max_length=20, null=True)),
                ('contact', models.CharField(blank=True, db_column='Contact', max_length=20, null=True)),
                ('street1', models.CharField(blank=True, db_column='Street1', max_length=50, null=True)),
                ('street2', models.CharField(blank=True, db_column='Street2', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=20, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=20, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=50, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataListGroups',
            fields=[
                ('datalistgroupid', models.AutoField(db_column='DataListGroupId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=40)),
                ('instrumentname', models.CharField(db_column='InstrumentName', max_length=40)),
            ],
            options={
                'db_table': 'DataListGroups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataListItems',
            fields=[
                ('datalistitemid', models.AutoField(db_column='DataListItemId', primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=255, null=True)),
                ('name', models.CharField(db_column='Name', max_length=20)),
            ],
            options={
                'db_table': 'DataListItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataListTypes',
            fields=[
                ('datalisttypeid', models.AutoField(db_column='DataListTypeId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=20)),
            ],
            options={
                'db_table': 'DataListTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Functions',
            fields=[
                ('functionid', models.AutoField(db_column='FunctionId', primary_key=True, serialize=False)),
                ('status', models.SmallIntegerField(db_column='Status')),
            ],
            options={
                'verbose_name': 'Function',
                'verbose_name_plural': 'Functions',
                'db_table': 'Functions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FunctionTypes',
            fields=[
                ('functiontypeid', models.AutoField(db_column='FunctionTypeId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=30)),
            ],
            options={
                'db_table': 'FunctionTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Limits',
            fields=[
                ('limitid', models.AutoField(db_column='LimitId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=30)),
                ('value1', models.CharField(blank=True, db_column='Value1', max_length=25, null=True)),
                ('value2', models.CharField(blank=True, db_column='Value2', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Limits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('parameterid', models.AutoField(db_column='ParameterId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=30)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Parameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pats',
            fields=[
                ('patid', models.AutoField(db_column='PATId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('mi', models.CharField(blank=True, db_column='MI', max_length=20, null=True)),
                ('swversion', models.CharField(blank=True, db_column='SWVersion', max_length=20, null=True)),
                ('serialnumber', models.CharField(db_column='SerialNumber', max_length=20)),
                ('lastcalibration', models.DateTimeField(blank=True, db_column='LastCalibration', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=10, null=True)),
            ],
            options={
                'db_table': 'PATS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Premises',
            fields=[
                ('premisesid', models.AutoField(db_column='PremisesId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('nextpremisesid', models.IntegerField(blank=True, db_column='NextPremisesId', null=True)),
                ('archived', models.SmallIntegerField(blank=True, db_column='Archived', null=True)),
            ],
            options={
                'verbose_name': 'Premise',
                'verbose_name_plural': 'Premises',
                'db_table': 'Premises',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('projectid', models.AutoField(db_column='ProjectId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=20)),
                ('archived', models.SmallIntegerField(blank=True, db_column='Archived', null=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'db_table': 'Projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RepairCodes',
            fields=[
                ('repaircodeid', models.AutoField(db_column='RepairCodeId', primary_key=True, serialize=False)),
                ('repaircode', models.CharField(db_column='RepairCode', max_length=20)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=100, null=True)),
                ('price', models.FloatField(blank=True, db_column='Price', null=True)),
            ],
            options={
                'db_table': 'RepairCodes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('resultid', models.AutoField(db_column='ResultId', primary_key=True, serialize=False)),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('value', models.CharField(blank=True, db_column='Value', max_length=20, null=True)),
                ('quantity', models.CharField(blank=True, db_column='Quantity', max_length=15, null=True)),
            ],
            options={
                'verbose_name': 'Results',
                'verbose_name_plural': 'Results',
                'db_table': 'Results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysDiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Translations',
            fields=[
                ('translationid', models.AutoField(db_column='TranslationId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=30)),
                ('culture', models.CharField(db_column='Culture', max_length=50)),
                ('translation', models.CharField(db_column='Translation', max_length=50)),
                ('instrumentname', models.CharField(db_column='InstrumentName', max_length=50)),
            ],
            options={
                'db_table': 'Translations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(db_column='UserId', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=20)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=20, null=True)),
                ('department', models.CharField(blank=True, db_column='Department', max_length=50, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=20, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Validators',
            fields=[
                ('validatorid', models.AutoField(db_column='ValidatorId', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=20)),
                ('lastname', models.CharField(db_column='LastName', max_length=20)),
                ('company', models.CharField(blank=True, db_column='Company', max_length=20, null=True)),
                ('department', models.CharField(blank=True, db_column='Department', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=20, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Validators',
                'managed': False,
            },
        ),
    ]
